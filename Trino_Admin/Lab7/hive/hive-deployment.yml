
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-metastore
  namespace: metastore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hive-metastore
  template:
    metadata:
      labels:
        app: hive-metastore
    spec:
      restartPolicy: Always
      initContainers:
      - name: init-sleep
        image: busybox
        command: ["sh", "-c", "sleep 30"]
      containers:
      - name: hive-metastore
        image: technoavengers/hivemetastore
        imagePullPolicy: IfNotPresent
        env:
          - name: AWS_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-credentials
                key: AWS_ACCESS_KEY
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-credentials
                key: AWS_SECRET_ACCESS_KEY
          - name: S3_BUCKET
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_S3_BUCKET
          - name: HIVE_SSL_ENABLED
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_SSL_ENABLED
          - name: HIVE_USE_INSTANCE_CREDENTIALS
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_USE_INSTANCE_CREDENTIALS
          - name: HIVE_HOST
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_HOST
          - name: HIVE_PORT
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_PORT
          - name: HIVE_METASTORE_SERVER_MAX_THREADS
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_METASTORE_SERVER_MAX_THREADS
          - name: HIVE_METASTORE_SERVER_MIN_THREADS
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: HIVE_METASTORE_SERVER_MIN_THREADS
          - name: POSTGRES_USER
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: adminPasswordKey
          - name: POSTGRES_HOST
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: POSTGRES_HOST
          - name: POSTGRES_URL
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: POSTGRES_URL
          - name: POSTGRES_PORT
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: POSTGRES_PORT
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: POSTGRES_DB
          - name: S3_ENDPOINT
            valueFrom:
              configMapKeyRef:
                name: metastore-env
                key: S3_ENDPOINT
        ports:
          - containerPort: 8080
          - containerPort: 8889
          - containerPort: 9083
        resources:
          limits:
            memory: 2000Mi
          requests:
            memory: 500Mi
            cpu: "0.5"
        volumeMounts:
          - name: postgres-postgresql-crt
            mountPath: /etc/postgres  # Define where you want to mount your certificate in the container
            readOnly: true
      volumes:
      - name: postgres-postgresql-crt
        secret:
          secretName: postgres-postgresql-crt  # Name of your secret
          defaultMode: 0600  